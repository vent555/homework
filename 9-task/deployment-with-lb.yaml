apiVersion: apps/v1
kind: Deployment
metadata:
  name: heys    #Autoscaling will look for those deployment name
  labels:
    app: my-heys
spec:
  #replicas: 2  # It is not need, because there is autoscaling
  selector:
    matchLabels:
      project: pod-name
  template:
    metadata:
      labels:
        project: pod-name     #Service will look for those PODs labels
    spec:
      containers:
        - name: pyproj
          image: 640947690715.dkr.ecr.eu-central-1.amazonaws.com/pyproj:latest
          ports:
            - containerPort: 5000

        - name: goproj
          #image: 640947690715.dkr.ecr.eu-central-1.amazonaws.com/goproj:build-2d63bd35-7c10-4b0a-9726-443f7591a12f
          image: 640947690715.dkr.ecr.eu-central-1.amazonaws.com/goproj:latest
          ports:
            - containerPort: 8080

#selector, what is it for?
---
apiVersion: v1
kind: Service
metadata:
  name: heys-srv
  labels:
    env: prod
    owner: vent555
spec:
  selector:
    project: pod-name   #Selecting PODs with those labels
  type: LoadBalancer
  ports:
    - name      : py-app
      protocol  : TCP
      port      : 8085
      targetPort: 5000

    - name      : go-app
      protocol  : TCP
      port      : 8080
      targetPort: 8080

---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  name: heys-autoscaling
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: heys    #Selecting deployment with those name
  minReplicas: 2
  maxReplicas: 3
  metrics:
  - type: Resource
    resource:
      name: cpu
      target: 
        type: Utilization
        averageUtilization: 80
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
